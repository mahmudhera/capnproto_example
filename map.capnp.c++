// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: map.capnp

#include "map.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<51> b_ca3aaa70efda5aff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255,  90, 218, 239, 112, 170,  58, 202,
     10,   0,   0,   0,   1,   0,   1,   0,
    239, 205, 171, 239, 205, 171, 239, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 112,  46,  99,  97, 112, 110,
    112,  58,  75, 101, 121,  86,  97, 108,
    117, 101,  80,  97, 105, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca3aaa70efda5aff = b_ca3aaa70efda5aff.words;
#if !CAPNP_LITE
static const uint16_t m_ca3aaa70efda5aff[] = {0, 1};
static const uint16_t i_ca3aaa70efda5aff[] = {0, 1};
const ::capnp::_::RawSchema s_ca3aaa70efda5aff = {
  0xca3aaa70efda5aff, b_ca3aaa70efda5aff.words, 51, nullptr, m_ca3aaa70efda5aff,
  0, 2, i_ca3aaa70efda5aff, nullptr, nullptr, { &s_ca3aaa70efda5aff, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_9a722e3b0841b283 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    131, 178,  65,   8,  59,  46, 114, 154,
     10,   0,   0,   0,   1,   0,   0,   0,
    239, 205, 171, 239, 205, 171, 239, 205,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,  97, 112,  46,  99,  97, 112, 110,
    112,  58,  77,  97, 112,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    255,  90, 218, 239, 112, 170,  58, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9a722e3b0841b283 = b_9a722e3b0841b283.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9a722e3b0841b283[] = {
  &s_ca3aaa70efda5aff,
};
static const uint16_t m_9a722e3b0841b283[] = {0};
static const uint16_t i_9a722e3b0841b283[] = {0};
const ::capnp::_::RawSchema s_9a722e3b0841b283 = {
  0x9a722e3b0841b283, b_9a722e3b0841b283.words, 35, d_9a722e3b0841b283, m_9a722e3b0841b283,
  1, 1, i_9a722e3b0841b283, nullptr, nullptr, { &s_9a722e3b0841b283, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// KeyValuePair
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t KeyValuePair::_capnpPrivate::dataWordSize;
constexpr uint16_t KeyValuePair::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind KeyValuePair::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* KeyValuePair::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Map
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Map::_capnpPrivate::dataWordSize;
constexpr uint16_t Map::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Map::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Map::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



